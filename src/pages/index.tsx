import Head from 'next/head';
import {
  UserCircleIcon,
  AtSymbolIcon,
  KeyIcon,
} from '@heroicons/react/24/outline';
import { Checkbox } from '@material-tailwind/react';
import { useState } from 'react';
import { useForm } from 'react-hook-form';
import { SubmitHandler } from 'react-hook-form/dist/types';
import Button from '@material-tailwind/react/components/Button';

type Inputs = {
  email: string;
  password: string;
};

export default function Login() {
  const [checked, setChecked] = useState(false);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Inputs>();
  const onSubmit: SubmitHandler<Inputs> = data => console.log(data);
  return (
    <div>
      <Head>
        <title>Gk</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg-gradient-to-r from-cyan-500 to-blue-500 h-screen flex">
        <form
          onSubmit={handleSubmit(onSubmit)}
          className="w-4/5 md:w-4/6 lg:w-2/6 h-4/6 shadow-2xl flex flex-col m-auto rounded-3xl justify-center pb-4"
        >
          <div className="mx-auto flex justify-center mt-4">
            <UserCircleIcon className="w-2/5 m-auto text-white" />
          </div>
          <div className="relative w-3/4 mx-auto my-10">
            <div className="flex justify-center">
              <label className=" flex" htmlFor="email">
                <AtSymbolIcon className="w-5 h-full m-auto text-white border-b border-slate-300" />
              </label>
              <input
                id="email"
                type="email"
                {...register('email', {
                  required: true,
                  pattern: {
                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i,
                    message: 'invalid email address',
                  },
                })}
                autoComplete="off"
                placeholder="Email"
                className=" text-white w-full block px-1 py-2 bg-transparent border-b border-slate-300 text-sm  placeholder-white
      focus:outline-none 
    "
              />
            </div>

            {errors.email?.type === 'required' && (
              <small className="w-3/4 font-bold mx-auto text-red-700 absolute">
                Esse campo é obrigatorio
              </small>
            )}
            {errors.email?.type === 'pattern' && (
              <small className="w-3/4 font-bold mx-auto text-red-700 absolute">
                Email invalido
              </small>
            )}
          </div>

          <div className="relative w-3/4 mx-auto mb-4">
            <div className="flex  justify-center">
              <label className="flex" htmlFor="password">
                <KeyIcon className="w-5 h-full m-auto text-white border-b border-slate-300" />
              </label>
              <input
                id="password"
                type="password"
                placeholder="Senha"
                {...register('password', { required: true })}
                className=" text-white w-full block px-1 py-2 bg-transparent border-b border-slate-300 text-sm  placeholder-white
      focus:outline-none 
    "
              />
            </div>

            {errors.password?.type === 'required' && (
              <small className="font-bold text-red-700 absolute">
                Esse campo é obrigatorio
              </small>
            )}
          </div>

          <div className="flex w-full mx-auto mt-8 mb-4 justify-between text-white px-8 gap-3 md:gap-0">
            <div className="flex justify-center items-center">
              <Checkbox
                id="lembreMe"
                ripple={false}
                className="border-white hover:before:opacity-0 checked:bg-transparent checked:border-white"
                value="true"
                checked={checked}
                onChange={() => setChecked(!checked)}
              />
              <label
                htmlFor="lembreMe"
                className="text-xs md:text-sm hover:opacity-80 hover:cursor-pointer"
              >
                Lembre-me
              </label>
            </div>
            <button
              type="button"
              className="text-xs md:text-sm hover:opacity-80"
            >
              Esqueci minha senha
            </button>
          </div>

          <Button
            type="submit"
            className="text-white font-bold bg-white bg-opacity-25 py-4 rounded-3xl w-3/4 mx-auto hover:opacity-80"
          >
            Logar
          </Button>
        </form>
      </div>
    </div>
  );
}
